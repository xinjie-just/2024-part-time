@use 'sass:meta';

@function rpx($value) {
  @return $value * 1rpx;
}

/**
* 点击文本状态
 */
@mixin click-text-active($color: rgba(0, 0, 0, 0.2)) {
  &:active {
    transition: color 0.01s;
    color: $color;
  }
}

/**
* @param $color
* 点击背景状态
 */
@mixin click-bg-active($color: rgba(0, 0, 0, 0.06)) {
  &:active {
    transition: background-color 0.01s;
    background-color: $color;
  }
}

/**
* @param $rpx
* 将元素设置成圆形
 */
@mixin el-to-circle($rpx) {
  width: rpx($rpx);
  height: rpx($rpx);
  border-radius: rpx($rpx);
}

/**
* @description 绝对定位居中显示
 */
@mixin position-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/**
* @description flex布局垂直水平居中
 */
@mixin flex-center($args...) {
  display: flex;
  align-items: center;
  justify-content: center;
  @each $key, $value in meta.keywords($args) {
    & {
      #{$key}: $value;
    }
  }
}

/**
* @description 多行文本省略号
 */
@mixin text-ellipsis($line: 1) {
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;

  -webkit-line-clamp: $line;
  @if ($line == 1) {
    text-overflow: ellipsis;
    word-break: break-all;
  }
}

/**
* @description 三角气泡框
 */
@mixin popover($placement, $args...) {
  @each $key, $value in meta.keywords($args) {
    &::after {
      #{$key}: $value;
    }
  }

  &::after {
    position: absolute;
    width: 0;
    height: 0;
    content: '';
    color: #fff;
    border-width: 6px;
    border-style: solid;
    border-color: transparent;
    @if ($placement == 'top') {
      bottom: 0;
      left: 50%;
      transform: translate(-50%, 100%);
      border-top-color: currentcolor;
      border-bottom-width: 0;
    }

    @if ($placement == 'bottom') {
      top: 0;
      left: 50%;
      transform: translate(-50%, -100%);
      border-top-width: 0;
      border-bottom-color: currentcolor;
    }

    @if ($placement == 'left') {
      top: 50%;
      right: 0;
      transform: translate(100%, -50%);
      border-right-width: 0;
      border-left-color: currentcolor;
    }

    @if ($placement == 'right') {
      top: 50%;
      left: 0;
      transform: translate(-100%, -50%);
      border-right-color: currentcolor;
      border-left-width: 0;
    }
  }
}
